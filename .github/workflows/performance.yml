name: Performance Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run performance tests weekly
    - cron: '0 6 * * 1'

jobs:
  load-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: expense_tracker_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      run: |
        cd backend
        npm ci

    - name: Start application
      run: |
        cd backend
        npm start &
        sleep 10
      env:
        NODE_ENV: test
        PORT: 3001
        AI_ENABLED: false

    - name: Install Artillery
      run: npm install -g artillery

    - name: Run load tests
      run: |
        artillery run testing/load-test.yml --output report.json

    - name: Generate HTML report
      run: |
        artillery report report.json --output performance-report.html

    - name: Upload performance report
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: performance-report.html

  lighthouse-audit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies and build
      run: |
        cd web-frontend
        npm ci
        npm run build

    - name: Serve built app
      run: |
        cd web-frontend
        npx serve -s build -p 3000 &
        sleep 5

    - name: Run Lighthouse audit
      uses: treosh/lighthouse-ci-action@v9
      with:
        configPath: './lighthouse.config.js'
        uploadArtifacts: true
        temporaryPublicStorage: true
